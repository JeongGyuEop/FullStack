

1. 연산자(Operator)란?
  - 연산식에서 사용되는 기호

  - 연산자의 종류
    - 산술연산자들
      > 수학 계산을 할 때 즉, 더하거나 빼거나 곱하거나 나머지 값 구하는 연산자들
      (1) + : 두 피연산자의 값을 더한다. 10 + 2
      (2) - : 첫 번째 피연산자 값에서 두 번째 피연산자 값을 뺀다. 10 - 2
      (3) * : 두 피연산자의 값을 곱한다. 10 * 2
      (4) / : 첫 번째 피연산자 값을 두 번째 피연산자 값으로 나눈다. 10 / 2
      (5) % : 첫 번째 피연산자 값을 두 번째 피연산자 값으로 나눈 나머지 값을 구한다.

    [실습. 산술연산자.html]


2. 대입 연산자와 복합대입연산자들
  - 대입연산자란?
    - 가장 기본이 되는 연산자로 변수에 값을 할당해서 저장하는 역할을 하는 연산자 기호
      (예) let 변수명 = 저장할 값
          해석 : 대입 연산자 =를 기준으로 저장할 값을 변수명 자리의 변수에 저장

  - 복합대입연산자들이란?
    - 대입연산자와 산술연산자를 합쳐 놓은 연산자들을 말한다.
      > +=  (예) 1 += 2 
      > -=  (예) 1 -= 2 
      > *=  (예) 1 *= 2 
      > /=  (예) 1 /= 2 
      > %=  (예) 1 %= 2 

    [실습. 복합대입연산자들.html]

    

3. 증감 연산자 ++ --
  - '++' : 숫자 데이터를 1씩 증가 시키는 증가연산자
  - '--' : 숫자 데이터르 1씩 감소 시키는 감소연산자
  - 기본 문법
    (1) 변수명--; 또는 --변수명;
        해석: 변수에 저장된 값을 1 감소
    (2) 변수명++; 또는 ++변수명;
        해석: 변수에 저장된 값을 1 증가
  - 코드 (예) 
      let A = ++B; // 변수 B의 데이터를 1증가 시킨 후 변수 A에 저장
      let A = B++; // 변수 A에 변수 B의 데이터를 먼저 저장한 후
                   // 변수 B의 데이터를 1 증가시킨다.
[실습. 
  증감연산자.html
  증감연산자2.html
  증감연산자3.html
  증감연산자4.html
]


4. 논리 연산자
  - 종류 : ||
    설명 : or 연산자라고 부르며, 피연산자 중 값이 하나라도 true가 존재하면
          true 결과 값을 반환 시키는 연산자.
    ->  true || false -> true
        false || true -> true
        true || true -> true
        false || false -> false
        (예) 10 == 10 || 100 < 10 -> true

  - 종류 : &&
    설명 : and 연산자라 부르며, 피연산자들 둘 다 true일 경우 true 반환
    ->  true && true -> true
        true && false -> false
        false && true -> false
        false && false -> false

  - 종류 : !
    설명 : not 연산자(논리부정연산자)라 부르며, 단항연산자라고도 부른다.
            피 연산자의 값이 true이면 false를 반환, 반대로 피연산자의 값이 
            false이면, true를 반환.
    ->  !true -> false
        !false -> true
[실습. 논리연산자.html]


5. 비교 연산자
  - 종류 : ==
    설명 : 두 피연산자의 값이 자료형의 유형은 달라도 숫자데이터는 일치하는지
           물어보는 연산자
    ->  10 == "10"  -> true 참

  - 종류 : === (동등 비교 연산자)
    설명 : 두 피연산자의 값과 자료형의 유형도 모두 일치하는지 물어보는 연산자
    -> 10 === "10" -> false
       
  - 종류 : !=
    설명 : 두 피연산자의 값과 자료형의 유형은 달라도 숫자데이터는 다른가?
    ->  10 != "10" -> false 거짓

  - 종류 : !==
    설명 : 두 피연산자의 값이 자료형의 유형과 데이터가 모두 다른가?
    ->  10 !== "10" -> true 참

  - 종류 : >
    설명 : 피연산자 A가 피연산자 B보다 큰가?
    ->  A > B

  - 종류 : >=
    설명 : 피연산자 A가 피연산자 B 보다 크거나 같은가?
    ->  A >= B
  
  - 종류 : < 
    설명 : 피연산자 A가 피연산자 B보다 작은가?
    ->  A < B 

  - 종류 : <=
    설명 : 피연산자 A가 피연산자 B보다 작거나 같은가?
    ->  A <= B

[실습. 비교연산자.html]


6. null 병합연산자 
  - 종류 : ??
    설명 : ?? null 병합 연산자는 값이 저장된 (확정된) 변수를 찾을 때 사용하는 연산자
  참고. 자바스크립트에서는 값이 "없음"을 나타내는 자료형으로 null과 undefined가 있다.

[실습. null병합연산자.js]


7. 동적 타이핑과 typeof 연산자
  - 동적 타이핑 ?
    설명 : 저장하는 변수 값에 따라 변수 메모리의 크기(자료형)도 함께 변경되는 특징을 말함
    예) let num = 10;
        // num 변수를 만들어 10을 저장하는 순간 10은 number 숫자형 이므로
        // num 변수의 크기는 64비트(8바이트)로 결정되어 만들어진다.

        let result = true;
        // result 변수를 만들어 true를 저장하는 순감 true는 boolean 논리형이므로
        // result 변수의 크기는 8비트(1바이트)로 결정되어 만들어진다.

  참고. 컴퓨터에 데이터는 다양한 크기의 단위로 저장
        이 단위들은 매우 작은 단위인 bit(비트)에서 시작하여 점점 더 큰 byte(바이트) 및
        그 이상의 단위로 확장해서 저장시킨다.

        1. 비트(Bit)
          - 1 Byte = 8 Bits
          - 정의 : 컴퓨터의 가장 작은 데이터 단위
          - 값 : 0 또는 1 두가지 값을 가질 수 있다.
              예) 스위치가 꺼진상태(0) 또는 켜진 상태(1)
          - 메모리 예시
             0 1 0 1 1 0 0 1

        2. 바이트(Byte)
          - 8 Bit로 구성된 데이터 단위
          - 값 : 0부터 255까지의 값을 표현(2의 8승 = 256개)
              예) 하나의 문자(예: 'A'는 65, 'a'는 97)

        3. 킬로바이트 (KB)
          - 정의 :1024 바이트 = 1KB
          - 값 : 약 1024 byte (2의 10승 byte)
              예) 작은 텍스트 파일

        4. 메가바이트 (MB)
          - 정의 : 1024 킬로바이트 = 1MB
          - 값 : 약 1,048,576 bytes (1024 * 1024 bytes)
              예) 고해상도 사진 한장

        5. 기가바이트 (GB)
          - 정의 : 1024 메가바이트 = 1GB
          - 값 : 약 1,073,741,824 bytes (1024 * 1024 * 1024 bytes)      
              예) 영화 한편

        6. 테라바이트 (TB)
          - 정의 : 1024 기가바이트 -> 1TB
          - 값 : 약 1,099,511,627,776 bytes (1024 * 1024 * 1024 * 1024 bytes)
              예) 대형 데이터베이스 저장

  [실습. 동적타이핑.js]

8. 삼항 조건연산자식
  - 유일하게 3개의 피연산자를 작성하는 연산자 식
  - 문법
      조건식 ? 조건식의 결과가 참일 때 실행할 코드 : 조건식의 결과가 거짓일 때 실행할 코드;

[
  실습. 
  삼항조건연산자식1.js 
  삼항조건연산자식2.js
  삼항조건연산자식3.js
  삼항조건연산자식4.js
]

------------------------------------------------------------------------------------------------

문제1. test_1_1.html
문제2. test_1_2.html





