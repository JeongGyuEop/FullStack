

// 예제. 상속 관계에서 자식 객체 메모리를 생성했을 때
// 		 자식 클래스의 생성자와 부모클래스의 생성자 호출 및 실행 순서

// 부모 클래스(할아버지)
class A {
	public A() {
		System.out.println("A 부모 클래스의 생성자 A");
	}
}

// 자식 클래스 1(아버지)
class B extends A{
	public B() {
		System.out.println("B 자식 클래스의 생성자 B");
	}
}

// 자식 클래스 (아들)
class C extends B {
	public C() {
		System.out.println("C자식클래스의 생성자 C");
	}
}


public class Ex1 {

	public static void main(String[] args) {
		// C 자식 클래스의 객체를 생성
		// C의 기본 생성자 호출
		C c = new C();
		
		/*
		 	1. new에 의해 서브(자식, C)클래스의 객체가 생성될 때 슈퍼(부모)
		 	   클래스의 생성자와 서브(자식, C) 클래스의 생성자가 모두 호출되어 실행된다.
		 	
		 	2. 생성자 호출 순서
		 		서브(자식) 클래스의 생성자가 먼저 호출되고
		 		서브(자식) 클래스의 생성자는 실행 전! 슈퍼(부모)클래스의 생성자를 호출한다.
		 		C() -> B() -> A() 순서대로 호출한다.
		 		
		 	3. 생성자 실행 순서
		 		슈퍼(부모)클래스의 생성자가 먼저 실행된 후 자신을 호출했던 바로 직전 자식
		 		클래스의 생성자가 나중에 실행된다.
		 		
		 		A() -> B() -> C() 순서대로 실행
		 */

	}

}
